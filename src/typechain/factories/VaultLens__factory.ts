/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { VaultLens, VaultLensInterface } from "../VaultLens";

const _abi = [
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountVaultInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "scaledBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingApproval",
            type: "uint256",
          },
        ],
        internalType: "struct AccountVaultInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vaults",
        type: "address[]",
      },
    ],
    name: "getAccountVaultsInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "scaledBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingApproval",
            type: "uint256",
          },
        ],
        internalType: "struct AccountVaultInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaultsData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAllVaultsDataWithAccount",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "vaultToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "underlyingToken",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "borrower",
                type: "address",
              },
              {
                internalType: "address",
                name: "controller",
                type: "address",
              },
              {
                internalType: "address",
                name: "feeRecipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "interestFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penaltyFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "temporaryLiquidityCoverage",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "originalLiquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "temporaryLiquidityCoverageExpiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "annualInterestBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaledTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "coverageLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaleFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastAccruedProtocolFees",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDelinquent",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timeDelinquent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastInterestAccruedTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct VaultData",
            name: "vault",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "scaledBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingApproval",
                type: "uint256",
              },
            ],
            internalType: "struct AccountVaultInfo",
            name: "account",
            type: "tuple",
          },
        ],
        internalType: "struct VaultDataWithAccount[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getControlStatus",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
        ],
        internalType: "struct ControlStatus",
        name: "status",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getPaginatedVaultsData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getPaginatedVaultsDataWithAccount",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "vaultToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "underlyingToken",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "borrower",
                type: "address",
              },
              {
                internalType: "address",
                name: "controller",
                type: "address",
              },
              {
                internalType: "address",
                name: "feeRecipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "interestFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penaltyFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "temporaryLiquidityCoverage",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "originalLiquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "temporaryLiquidityCoverageExpiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "annualInterestBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaledTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "coverageLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaleFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastAccruedProtocolFees",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDelinquent",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timeDelinquent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastInterestAccruedTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct VaultData",
            name: "vault",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "scaledBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingApproval",
                type: "uint256",
              },
            ],
            internalType: "struct AccountVaultInfo",
            name: "account",
            type: "tuple",
          },
        ],
        internalType: "struct VaultDataWithAccount[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMock",
            type: "bool",
          },
        ],
        internalType: "struct TokenMetadata",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getTokensInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMock",
            type: "bool",
          },
        ],
        internalType: "struct TokenMetadata[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getVaultData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getVaultDataWithAccount",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "vaultToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "underlyingToken",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "borrower",
                type: "address",
              },
              {
                internalType: "address",
                name: "controller",
                type: "address",
              },
              {
                internalType: "address",
                name: "feeRecipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "interestFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penaltyFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "temporaryLiquidityCoverage",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "originalLiquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "temporaryLiquidityCoverageExpiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "annualInterestBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaledTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "coverageLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaleFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastAccruedProtocolFees",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDelinquent",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timeDelinquent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastInterestAccruedTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct VaultData",
            name: "vault",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "scaledBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingApproval",
                type: "uint256",
              },
            ],
            internalType: "struct AccountVaultInfo",
            name: "account",
            type: "tuple",
          },
        ],
        internalType: "struct VaultDataWithAccount",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "vaults",
        type: "address[]",
      },
    ],
    name: "getVaultsData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMock",
                type: "bool",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vaults",
        type: "address[]",
      },
    ],
    name: "getVaultsDataWithAccount",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "vaultToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMock",
                    type: "bool",
                  },
                ],
                internalType: "struct TokenMetadata",
                name: "underlyingToken",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "borrower",
                type: "address",
              },
              {
                internalType: "address",
                name: "controller",
                type: "address",
              },
              {
                internalType: "address",
                name: "feeRecipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "interestFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "penaltyFeeBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "temporaryLiquidityCoverage",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "originalLiquidityCoverageRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "temporaryLiquidityCoverageExpiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "annualInterestBips",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowableAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaledTotalSupply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalAssets",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "coverageLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "scaleFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastAccruedProtocolFees",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isDelinquent",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timeDelinquent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastInterestAccruedTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct VaultData",
            name: "vault",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "scaledBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "underlyingApproval",
                type: "uint256",
              },
            ],
            internalType: "struct AccountVaultInfo",
            name: "account",
            type: "tuple",
          },
        ],
        internalType: "struct VaultDataWithAccount[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class VaultLens__factory {
  static readonly abi = _abi;
  static createInterface(): VaultLensInterface {
    return new utils.Interface(_abi) as VaultLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultLens {
    return new Contract(address, _abi, signerOrProvider) as VaultLens;
  }
}
