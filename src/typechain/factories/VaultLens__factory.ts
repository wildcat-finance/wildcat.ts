/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VaultLens, VaultLensInterface } from "../VaultLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DebtTokenBase",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountVaultInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "scaledBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingApproval",
            type: "uint256",
          },
        ],
        internalType: "struct AccountVaultInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DebtTokenBase",
        name: "vault",
        type: "address",
      },
    ],
    name: "getControlStatus",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
        ],
        internalType: "struct ControlStatus",
        name: "status",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
        ],
        internalType: "struct TokenMetadata",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DebtTokenBase",
        name: "vault",
        type: "address",
      },
    ],
    name: "getVaultData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DebtTokenBase[]",
        name: "vaults",
        type: "address[]",
      },
    ],
    name: "getVaultsMetadata",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "vaultToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct TokenMetadata",
            name: "underlyingToken",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "interestFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyFeeBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "annualInterestBips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "temporaryLiquidityCoverage",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "originalLiquidityCoverageRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temporaryLiquidityCoverageExpiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowableAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaledTotalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coverageLiquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scaleFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAccruedProtocolFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDelinquent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeDelinquent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestAccruedTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct VaultData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061231d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f69565f1461005c57806328b37b221461008c57806356360f71146100bc578063a0ff58f6146100ec578063a32698461461011c575b600080fd5b6100766004803603810190610071919061139d565b61014c565b60405161008391906114ec565b60405180910390f35b6100a660048036038101906100a1919061154c565b610304565b6040516100b391906115d6565b60405180910390f35b6100d660048036038101906100d1919061154c565b61044c565b6040516100e39190611862565b60405180910390f35b61010660048036038101906101019190611884565b610e3a565b6040516101139190611919565b60405180910390f35b61013660048036038101906101319190611999565b6110ca565b6040516101439190611caf565b60405180910390f35b61015461119b565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101d7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102009190611df2565b81602001819052508173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061027c9190611df2565b81604001819052508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190611e74565b60ff16816060018181525050919050565b61030c6111d9565b6000808373ffffffffffffffffffffffffffffffffffffffff1663f77c47916040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e9190611eb6565b73ffffffffffffffffffffffffffffffffffffffff1663a77a679e856040518263ffffffff1660e01b81526004016103b69190611ef2565b6040805180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f69190611f55565b6fffffffffffffffffffffffffffffffff1691506fffffffffffffffffffffffffffffffff1691506000811183600001901515908115158152505081836020018181525050808360400181815250505050919050565b6104546111fc565b61045d8261014c565b81600001819052506104dc8273ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190611eb6565b61014c565b81602001819052508173ffffffffffffffffffffffffffffffffffffffff16637df1f1b96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190611eb6565b816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663f77c47916040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f99190611eb6565b816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663469048406040518163ffffffff1660e01b8152600401602060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190611eb6565b816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663397f11336040518163ffffffff1660e01b8152600401602060405180830381865afa158015610721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107459190611fc1565b8160a00181815250508173ffffffffffffffffffffffffffffffffffffffff1663411ef4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190611fc1565b8160c00181815250508173ffffffffffffffffffffffffffffffffffffffff1663a06db7dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190611fc1565b8160e00181815250508173ffffffffffffffffffffffffffffffffffffffff166311057cd06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ad9190611fc1565b816101000181815250508173ffffffffffffffffffffffffffffffffffffffff1663807164826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190611fc1565b816101200181815250506000808373ffffffffffffffffffffffffffffffffffffffff1663f77c47916040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611eb6565b73ffffffffffffffffffffffffffffffffffffffff1663a77a679e856040518263ffffffff1660e01b81526004016109da9190611ef2565b6040805180830381865afa1580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190611f55565b6fffffffffffffffffffffffffffffffff1691506fffffffffffffffffffffffffffffffff1691506000811183610140019015159081151581525050818361016001818152505080836101800181815250508373ffffffffffffffffffffffffffffffffffffffff1663766360176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb9190611fc1565b836101a001818152505060008473ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff1660e01b815260040161010060405180830381865afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5791906121ea565b90508473ffffffffffffffffffffffffffffffffffffffff16632ab4d0526040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc89190611fc1565b846101c001818152505080602001516cffffffffffffffffffffffffff16846101e00181815250508473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611fc1565b846102000181815250508473ffffffffffffffffffffffffffffffffffffffff166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611fc1565b846102200181815250508473ffffffffffffffffffffffffffffffffffffffff1663739ccdd36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d519190611fc1565b846102400181815250508060c001516dffffffffffffffffffffffffffff16846102600181815250508473ffffffffffffffffffffffffffffffffffffffff16630cd1a5b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611fc1565b846102800181815250508060400151846102a00190151590811515815250508060a0015163ffffffff16846102c00181815250508060e0015163ffffffff16846102e0018181525050505050919050565b610e42611303565b8273ffffffffffffffffffffffffffffffffffffffff16631da24f3e836040518263ffffffff1660e01b8152600401610e7b9190611ef2565b602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc9190611fc1565b8160000181815250508273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610efe9190611ef2565b602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190611fc1565b81602001818152505060008373ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb99190611eb6565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610ff49190611ef2565b602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190611fc1565b8260400181815250508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84866040518363ffffffff1660e01b8152600401611079929190612218565b602060405180830381865afa158015611096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ba9190611fc1565b8260600181815250505092915050565b60608282905067ffffffffffffffff8111156110e9576110e8611cd6565b5b60405190808252806020026020018201604052801561112257816020015b61110f6111fc565b8152602001906001900390816111075790505b50905060005b838390508110156111945761116384848381811061114957611148612241565b5b905060200201602081019061115e919061154c565b61044c565b82828151811061117657611175612241565b5b6020026020010181905250808061118c9061229f565b915050611128565b5092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081525090565b604051806060016040528060001515815260200160008152602001600081525090565b60405180610300016040528061121061119b565b815260200161121d61119b565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061136a8261133f565b9050919050565b61137a8161135f565b811461138557600080fd5b50565b60008135905061139781611371565b92915050565b6000602082840312156113b3576113b2611335565b5b60006113c184828501611388565b91505092915050565b6113d38161135f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114135780820151818401526020810190506113f8565b60008484015250505050565b6000601f19601f8301169050919050565b600061143b826113d9565b61144581856113e4565b93506114558185602086016113f5565b61145e8161141f565b840191505092915050565b6000819050919050565b61147c81611469565b82525050565b600060808301600083015161149a60008601826113ca565b50602083015184820360208601526114b28282611430565b915050604083015184820360408601526114cc8282611430565b91505060608301516114e16060860182611473565b508091505092915050565b600060208201905081810360008301526115068184611482565b905092915050565b60006115198261135f565b9050919050565b6115298161150e565b811461153457600080fd5b50565b60008135905061154681611520565b92915050565b60006020828403121561156257611561611335565b5b600061157084828501611537565b91505092915050565b60008115159050919050565b61158e81611579565b82525050565b6060820160008201516115aa6000850182611585565b5060208201516115bd6020850182611473565b5060408201516115d06040850182611473565b50505050565b60006060820190506115eb6000830184611594565b92915050565b600060808301600083015161160960008601826113ca565b50602083015184820360208601526116218282611430565b9150506040830151848203604086015261163b8282611430565b91505060608301516116506060860182611473565b508091505092915050565b600061030083016000830151848203600086015261167982826115f1565b9150506020830151848203602086015261169382826115f1565b91505060408301516116a860408601826113ca565b5060608301516116bb60608601826113ca565b5060808301516116ce60808601826113ca565b5060a08301516116e160a0860182611473565b5060c08301516116f460c0860182611473565b5060e083015161170760e0860182611473565b5061010083015161171c610100860182611473565b50610120830151611731610120860182611473565b50610140830151611746610140860182611585565b5061016083015161175b610160860182611473565b50610180830151611770610180860182611473565b506101a08301516117856101a0860182611473565b506101c083015161179a6101c0860182611473565b506101e08301516117af6101e0860182611473565b506102008301516117c4610200860182611473565b506102208301516117d9610220860182611473565b506102408301516117ee610240860182611473565b50610260830151611803610260860182611473565b50610280830151611818610280860182611473565b506102a083015161182d6102a0860182611585565b506102c08301516118426102c0860182611473565b506102e08301516118576102e0860182611473565b508091505092915050565b6000602082019050818103600083015261187c818461165b565b905092915050565b6000806040838503121561189b5761189a611335565b5b60006118a985828601611537565b92505060206118ba85828601611388565b9150509250929050565b6080820160008201516118da6000850182611473565b5060208201516118ed6020850182611473565b5060408201516119006040850182611473565b5060608201516119136060850182611473565b50505050565b600060808201905061192e60008301846118c4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261195957611958611934565b5b8235905067ffffffffffffffff81111561197657611975611939565b5b6020830191508360208202830111156119925761199161193e565b5b9250929050565b600080602083850312156119b0576119af611335565b5b600083013567ffffffffffffffff8111156119ce576119cd61133a565b5b6119da85828601611943565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610300830160008301518482036000860152611a3082826115f1565b91505060208301518482036020860152611a4a82826115f1565b9150506040830151611a5f60408601826113ca565b506060830151611a7260608601826113ca565b506080830151611a8560808601826113ca565b5060a0830151611a9860a0860182611473565b5060c0830151611aab60c0860182611473565b5060e0830151611abe60e0860182611473565b50610100830151611ad3610100860182611473565b50610120830151611ae8610120860182611473565b50610140830151611afd610140860182611585565b50610160830151611b12610160860182611473565b50610180830151611b27610180860182611473565b506101a0830151611b3c6101a0860182611473565b506101c0830151611b516101c0860182611473565b506101e0830151611b666101e0860182611473565b50610200830151611b7b610200860182611473565b50610220830151611b90610220860182611473565b50610240830151611ba5610240860182611473565b50610260830151611bba610260860182611473565b50610280830151611bcf610280860182611473565b506102a0830151611be46102a0860182611585565b506102c0830151611bf96102c0860182611473565b506102e0830151611c0e6102e0860182611473565b508091505092915050565b6000611c258383611a12565b905092915050565b6000602082019050919050565b6000611c45826119e6565b611c4f81856119f1565b935083602082028501611c6185611a02565b8060005b85811015611c9d5784840389528151611c7e8582611c19565b9450611c8983611c2d565b925060208a01995050600181019050611c65565b50829750879550505050505092915050565b60006020820190508181036000830152611cc98184611c3a565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d0e8261141f565b810181811067ffffffffffffffff82111715611d2d57611d2c611cd6565b5b80604052505050565b6000611d4061132b565b9050611d4c8282611d05565b919050565b600067ffffffffffffffff821115611d6c57611d6b611cd6565b5b611d758261141f565b9050602081019050919050565b6000611d95611d9084611d51565b611d36565b905082815260208101848484011115611db157611db0611cd1565b5b611dbc8482856113f5565b509392505050565b600082601f830112611dd957611dd8611934565b5b8151611de9848260208601611d82565b91505092915050565b600060208284031215611e0857611e07611335565b5b600082015167ffffffffffffffff811115611e2657611e2561133a565b5b611e3284828501611dc4565b91505092915050565b600060ff82169050919050565b611e5181611e3b565b8114611e5c57600080fd5b50565b600081519050611e6e81611e48565b92915050565b600060208284031215611e8a57611e89611335565b5b6000611e9884828501611e5f565b91505092915050565b600081519050611eb081611371565b92915050565b600060208284031215611ecc57611ecb611335565b5b6000611eda84828501611ea1565b91505092915050565b611eec8161135f565b82525050565b6000602082019050611f076000830184611ee3565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611f3281611f0d565b8114611f3d57600080fd5b50565b600081519050611f4f81611f29565b92915050565b60008060408385031215611f6c57611f6b611335565b5b6000611f7a85828601611f40565b9250506020611f8b85828601611f40565b9150509250929050565b611f9e81611469565b8114611fa957600080fd5b50565b600081519050611fbb81611f95565b92915050565b600060208284031215611fd757611fd6611335565b5b6000611fe584828501611fac565b91505092915050565b600080fd5b60006cffffffffffffffffffffffffff82169050919050565b61201581611ff3565b811461202057600080fd5b50565b6000815190506120328161200c565b92915050565b61204181611579565b811461204c57600080fd5b50565b60008151905061205e81612038565b92915050565b600061ffff82169050919050565b61207b81612064565b811461208657600080fd5b50565b60008151905061209881612072565b92915050565b600063ffffffff82169050919050565b6120b78161209e565b81146120c257600080fd5b50565b6000815190506120d4816120ae565b92915050565b60006dffffffffffffffffffffffffffff82169050919050565b6120fd816120da565b811461210857600080fd5b50565b60008151905061211a816120f4565b92915050565b6000610100828403121561213757612136611fee565b5b612142610100611d36565b9050600061215284828501611f40565b600083015250602061216684828501612023565b602083015250604061217a8482850161204f565b604083015250606061218e84828501612089565b60608301525060806121a284828501612089565b60808301525060a06121b6848285016120c5565b60a08301525060c06121ca8482850161210b565b60c08301525060e06121de848285016120c5565b60e08301525092915050565b6000610100828403121561220157612200611335565b5b600061220f84828501612120565b91505092915050565b600060408201905061222d6000830185611ee3565b61223a6020830184611ee3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122aa82611469565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122dc576122db612270565b5b60018201905091905056fea2646970667358221220fe27ab5f0dadd10a33f750028aaaab49b242d14a23b93d28585d529b4ab4710264736f6c63430008110033";

type VaultLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultLens__factory extends ContractFactory {
  constructor(...args: VaultLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VaultLens> {
    return super.deploy(overrides || {}) as Promise<VaultLens>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultLens {
    return super.attach(address) as VaultLens;
  }
  override connect(signer: Signer): VaultLens__factory {
    return super.connect(signer) as VaultLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultLensInterface {
    return new utils.Interface(_abi) as VaultLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultLens {
    return new Contract(address, _abi, signerOrProvider) as VaultLens;
  }
}
